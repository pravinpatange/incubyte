<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitReportReporter -->
<testsuite hostname="Inspiron-5408" failures="0" tests="8" name="TestCalculate" time="0.010" errors="1" timestamp="2021-10-20T12:47:49 IST" skipped="7">
  <testcase classname="TestCalculate" name="twoNumberCommaDelimiter" time="0.000">
    <skipped/>
  </testcase> <!-- twoNumberCommaDelimiter -->
  <system-out/>
  <testcase classname="TestCalculate" name="Greaterthan1000" time="0.000">
    <skipped/>
  </testcase> <!-- Greaterthan1000 -->
  <system-out/>
  <testcase classname="TestCalculate" name="SingleValue" time="0.000">
    <skipped/>
  </testcase> <!-- SingleValue -->
  <system-out/>
  <testcase classname="TestCalculate" name="negativeInputException" time="0.000">
    <skipped/>
  </testcase> <!-- negativeInputException -->
  <system-out/>
  <testcase classname="TestCalculate" name="init" time="0.010">
    <error message="Unresolved compilation problems: 
	The import com.sun.tools.javac.parser cannot be resolved
	Syntax error on token &quot;;&quot;, { expected after this token
	Syntax error on token &quot;)&quot;, invalid Statement
	Syntax error, insert &quot;}&quot; to complete ClassBody
" type="java.lang.Error">
      <![CDATA[java.lang.Error: Unresolved compilation problems: 
The import com.sun.tools.javac.parser cannot be resolved
Syntax error on token ";", { expected after this token
Syntax error on token ")", invalid Statement
Syntax error, insert "}" to complete ClassBody

at Calculator.<init>(Calculator.java:1)
at TestCalculate.init(TestCalculate.java:13)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:385)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:321)
at org.testng.TestRunner.invokeTestConfigurations(TestRunner.java:637)
at org.testng.TestRunner.beforeRun(TestRunner.java:627)
at org.testng.TestRunner.run(TestRunner.java:589)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </error>
  </testcase> <!-- init -->
  <system-out/>
  <testcase classname="TestCalculate" name="NewlineDelimiter" time="0.000">
    <skipped/>
  </testcase> <!-- NewlineDelimiter -->
  <system-out/>
  <testcase classname="TestCalculate" name="EmptyStringReturnZero" time="0.000">
    <skipped/>
  </testcase> <!-- EmptyStringReturnZero -->
  <system-out/>
  <testcase classname="TestCalculate" name="ThreeNum" time="0.000">
    <skipped/>
  </testcase> <!-- ThreeNum -->
  <system-out/>
</testsuite> <!-- TestCalculate -->
